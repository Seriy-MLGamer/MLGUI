///virtual class Node
///
///A base class for GUI elements that can contain other elements.
///
///Dependencies: Bindable.pixih, Button.pixih, Window.pixih
///
///"MLGUI" library v0.0.1.
///(C) Серый MLGamer, 2021.
///MIT license.

/*
 * \brief Adds Node properties to entered container without creating a new container. Useful for multiple inheritance in class constructors.
 * \param $this an output container.
 */
fn MLG_Node($this)
{
	$this.get_child_global_x=MLG_Node_get_child_global_x
	$this.get_child_global_y=MLG_Node_get_child_global_y
	$this.is_button_active=MLG_Node_is_button_active
	$this.is_window_active=MLG_Node_is_window_active
	$this.handle_window_events=MLG_Node_handle_window_events
}
fn MLG_Node_get_child_global_x($this, $bindable)
{
	logf("Error: get_child_global_x() in Node #%i isn't defined.\n", $this)
	exit(1)
}
fn MLG_Node_get_child_global_y($this, $bindable)
{
	logf("Error: get_child_global_y() in Node #%i isn't defined.\n", $this)
	exit(1)
}
fn MLG_Node_is_button_active($this)
{
	logf("Error: is_button_active() in Node #%i isn't defined.\n", $this)
	exit(1)
}
fn MLG_Node_is_window_active($this, $window)
{
	logf("Error: is_window_active() in Node #%i isn't defined.\n", $this)
	exit(1)
}
fn MLG_Node_handle_window_events($this, $window)
{
	logf("Error: handle_window_events() in Node #%i isn't defined.\n", $this)
	exit(1)
}